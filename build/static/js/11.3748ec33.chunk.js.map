{"version":3,"sources":["Components/EditProfile.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["EditProfile","userJSON","localStorage","getItem","user","JSON","parse","useState","name","setName","phone","setPhone","email","setEmail","account","setAccount","message","setMessage","Fragment","className","onSubmit","e","preventDefault","fetch","method","headers","body","stringify","id","_id","then","res","json","resJson","setItem","catch","err","console","log","htmlFor","onChange","target","value","placeholder","registerType","disabled","to","type","_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","TypeError"],"mappings":"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","file":"static/js/11.3748ec33.chunk.js","sourcesContent":["import React , {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst EditProfile = () => {\r\n  const userJSON=  localStorage.getItem('user');\r\n  const user= JSON.parse(userJSON)\r\n    const [name, setName] = useState('');\r\n    const [phone , setPhone]= useState('');\r\n    const [email, setEmail]= useState('');\r\n    const [account, setAccount] = useState('');\r\n    const [message, setMessage]= useState('')\r\n    \r\n    const onSubmit= (e)=>{\r\n        e.preventDefault();\r\n       \r\n       fetch(\"https://cobl.herokuapp.com/edit\", {\r\n         method:\"post\",\r\n         headers:{\r\n          \"Content-type\":\"application/json\",\r\n         },\r\n         body:JSON.stringify({\r\n              name,\r\n              email,\r\n              account,\r\n              phone,\r\n              id:user._id\r\n         })\r\n       }).then((res)=>{\r\n          return res.json()\r\n       })\r\n       .then((resJson)=>{\r\n        setMessage(\"Your details have been updated successfully\")\r\n        localStorage.setItem('user' , JSON.stringify(resJson));\r\n        \r\n       })\r\n       .catch(err=>{\r\n        console.log(err)\r\n         \r\n       })\r\n     \r\n        \r\n        \r\n        \r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"col-10 mx-auto my-3 col-md-5\">\r\n                               \r\n                <h3 className=\"my-4 text-center text-slant\">Edit profile</h3>\r\n                <form onSubmit={onSubmit} className=\"form\">\r\n                {message\r\n                ? <div className=\"alert alert-dismissible alert-success\">\r\n                    {message}\r\n                </div>\r\n                :\r\n                null}\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"form_label\" className=\"label\">\r\n                          Name: {user.name}\r\n                        </label>\r\n                        <input onChange={(e)=>setName(e.target.value)} id=\"form_label\" className=\"form-control\"   placeholder=\"Enter new name\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"form_label\" className=\"label\">\r\n                          Email: {user.email}\r\n                        </label>\r\n                        <input  onChange={(e)=>setEmail(e.target.value)} id=\"form_label\" className=\"form-control\"   placeholder=\"Enter new email\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"form_label\" className=\"label\">\r\n                          Phone number: {user.phone}\r\n                        </label>\r\n                        <input onChange={(e)=>setPhone(e.target.value)}  id=\"form_label\" className=\"form-control\"   placeholder=\"Enter new phone number\"/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"form_label\" className=\"label\">\r\n                       Registration type: {user.registerType}\r\n                        </label>\r\n                        <input id=\"form_label\" className=\"form-control\"  disabled placeholder=\"Contact customer care to change this\"/>\r\n                    </div>\r\n                    <Link to='/products'>View Products</Link>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"form_label\" className=\"label\">\r\n                          Account number: {user.account}\r\n                        </label>\r\n                        <input type=\"number\" onChange={(e)=>setAccount(e.target.value)}  id=\"form_label\" className=\"form-control\"   placeholder=\"Your new account number\"/>\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        \r\n                        <input type=\"submit\" id=\"form_label\" className=\"form-control btn btn-primary\"   />\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default EditProfile\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}