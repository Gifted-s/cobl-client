{"version":3,"sources":["Components/UploadProduct.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["user","localStorage","getItem","UserJSON","JSON","parse","UploadProduct","useState","name","setName","description","setDescription","price","setPrice","message","setMSG","err","setError","Fragment","className","autoComplete","onSubmit","e","preventDefault","fetch","method","headers","body","stringify","_id","then","res","json","resJSON","setItem","catch","console","log","htmlFor","id","onChange","target","value","placeholder","type","_slicedToArray","arr","i","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","length","TypeError"],"mappings":"0IAEMA,EAAMC,aAAaC,QAAQ,QAC3BC,EAASC,KAAKC,MAAML,GA+FXM,UA9FO,WAAO,IAAD,EAIDC,mBAAS,IAJR,mBAIjBC,EAJiB,KAIXC,EAJW,OAKaF,mBAAS,IALtB,mBAKjBG,EALiB,KAKJC,EALI,OAMEJ,mBAAS,MANX,mBAMjBK,EANiB,KAMVC,EANU,OAOAN,mBAAS,IAPT,mBAOjBO,EAPiB,KAORC,EAPQ,OAQDR,mBAAS,IARR,mBAQjBS,EARiB,KAQZC,EARY,KA2CxB,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKC,UAAU,OACf,yBAAKA,UAAU,gCACX,wBAAIA,UAAU,4CAAd,6CAIIH,EACA,yBAAKG,UAAU,wCACVH,GAGL,KAGAF,EACA,yBAAKK,UAAU,yCACVL,GAGL,KAGR,yBAAKK,UAAU,QACX,0BAAMC,aAAa,IAAIC,SA3DrB,SAACC,GAEX,GADAA,EAAEC,kBACEX,IAAUF,IAAeF,EAC3B,OAAOS,EAAS,8BAElBO,MAAM,oCAAqC,CACxCC,OAAO,OACPC,QAAQ,CACP,eAAe,oBAEhBC,KAAKvB,KAAKwB,UAAU,CACjBpB,OACAE,cACAE,QACAZ,KAAMG,EAAS0B,QAKpBC,KAAK,SAACC,GACH,OAAOA,EAAIC,SAEdF,KAAK,SAACG,GACNhC,aAAaiC,QAAQ,OAAS9B,KAAKwB,UAAUK,IAC7CxB,EAAQ,IACRE,EAAe,IACfE,EAAS,IACTE,EAAO,2CAGPoB,MAAM,SAAAnB,GACHoB,QAAQC,IAAIrB,OA6BR,yBAAKG,UAAU,cACX,2BAAOA,UAAU,QAAQmB,QAAQ,gBAAjC,mBACA,2BAAOC,GAAG,eAAeC,SAAU,SAAClB,GAAD,OAAMb,EAAQa,EAAEmB,OAAOC,QAAQvB,UAAU,eAAewB,YAAY,mCAE3G,yBAAKxB,UAAU,cACX,2BAAOA,UAAU,QAAQmB,QAAQ,gBAAjC,0BACA,2BAAOC,GAAG,eAAeC,SAAU,SAAClB,GAAD,OAAMX,EAAeW,EAAEmB,OAAOC,QAAQvB,UAAU,eAAewB,YAAY,+CAGlH,yBAAKxB,UAAU,cACX,2BAAOA,UAAU,QAAQmB,QAAQ,gBAAjC,oBACA,2BAAOM,KAAK,SAASJ,SAAU,SAAClB,GAAD,OAAMT,EAASS,EAAEmB,OAAOC,QAAQH,GAAG,eAAepB,UAAU,eAAewB,YAAY,oCAG1H,2BAAOxB,UAAU,kBAAkBuB,MAAM,cAAcE,KAAK,kB,gCCpF7D,SAASC,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,IAAIG,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKV,EAAIW,OAAOC,cAAmBP,GAAMI,EAAKC,EAAGG,QAAQC,QAChEV,EAAKW,KAAKN,EAAGb,QAETK,GAAKG,EAAKY,SAAWf,GAH8CI,GAAK,IAK9E,MAAOnC,GACPoC,GAAK,EACLC,EAAKrC,EACL,QACA,IACOmC,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,EFnBuB,CAAqBJ,EAAKC,IGJ3C,WACb,MAAM,IAAIgB,UAAU,wDHG0C,GAJhE","file":"static/js/12.0e8196df.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nconst user= localStorage.getItem('user');\r\nconst UserJSON=JSON.parse(user)\r\nconst UploadProduct = () => {\r\n   \r\n    \r\n    \r\n    const [name, setName]= useState('');\r\n    const [description, setDescription]= useState('');\r\n    const [price, setPrice] = useState(null);\r\n    const [message, setMSG]=useState('');\r\n    const [err, setError]= useState('')\r\n    const Submit= (e)=>{\r\n        e.preventDefault();\r\n        if(!price || !description|| !name){\r\n          return setError('Please fill all the fields')\r\n        }\r\n        fetch(\"https://cobl.herokuapp.com/upload\", {\r\n           method:'post',\r\n           headers:{\r\n            \"content-type\":'application/json'\r\n           },\r\n           body:JSON.stringify({\r\n              name,\r\n              description,\r\n              price,\r\n              user: UserJSON._id\r\n             \r\n           })\r\n        }\r\n        )\r\n        .then((res)=>{\r\n            return res.json()\r\n        })\r\n        .then((resJSON)=>{\r\n         localStorage.setItem('user' , JSON.stringify(resJSON));\r\n         setName('')\r\n         setDescription('')\r\n         setPrice('')\r\n         setMSG(\"The product was uploaded successfully\");\r\n         \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"row\">\r\n            <div className='col-10 mx-auto my-3 col-md-6'>\r\n                <h4 className=\"text-center text-capitalize mx-auto my-3\">\r\n                  Please fill the form below to add product\r\n                </h4>\r\n                {\r\n                    err?\r\n                    <div className=\"alert alert-danger alert-dismissible\">\r\n                        {err}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                {\r\n                    message?\r\n                    <div className=\"alert alert-success alert-dismissible\">\r\n                        {message}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n               \r\n            <div className=\"form\">\r\n                <form autoComplete=\" \" onSubmit={Submit}>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label\" htmlFor=\"input_fieled\">Name of Product</label>\r\n                    <input id=\"input_fieled\" onChange={(e)=> setName(e.target.value)} className='form-control' placeholder=\"Enter the name of the product\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"label\" htmlFor=\"input_fieled\">Description of Product</label>\r\n                    <input id=\"input_fieled\" onChange={(e)=> setDescription(e.target.value)} className='form-control' placeholder=\"Enter a short description  of the product\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label className=\"label\" htmlFor=\"input_fieled\">Price of product</label>\r\n                    <input type=\"number\" onChange={(e)=> setPrice(e.target.value)} id=\"input_fieled\" className='form-control' placeholder=\"Enter the price of the product\" />\r\n          \r\n             </div>\r\n                <input className=\"btn btn-primary\" value=\"Add product\" type=\"submit\"/>\r\n                </form>\r\n               \r\n            </div>\r\n            </div>\r\n            </div>\r\n       \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UploadProduct\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}"],"sourceRoot":""}