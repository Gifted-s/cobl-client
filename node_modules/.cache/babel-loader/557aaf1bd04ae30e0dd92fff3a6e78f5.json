{"ast":null,"code":"import _slicedToArray from \"F:\\\\context\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\context\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\src\\\\contexts\\\\BookContext.js\";\nimport React, { useReducer, useEffect, createContext } from 'react';\nimport bookReducer from '../bookReducer/bookReducer';\nexport const BookContext = createContext();\n\nconst BookContextProvider = props => {\n  const _useReducer = useReducer(bookReducer, () => {\n    const localData = localStorage.getItem(\"books\");\n    return localData ? localData : [];\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        books = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  useEffect(() => {});\n  return React.createElement(BookContext.Provider, {\n    value: {\n      books,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default BookContextProvider;","map":{"version":3,"sources":["F:\\context\\grahQL\\MY-APPS\\React\\client\\src\\contexts\\BookContext.js"],"names":["React","useReducer","useEffect","createContext","bookReducer","BookContext","BookContextProvider","props","localData","localStorage","getItem","books","dispatch","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA0BC,SAA1B,EAAqCC,aAArC,QAAyD,OAAzD;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,OAAO,MAAMC,WAAW,GAAGF,aAAa,EAAjC;;AAEP,MAAMG,mBAAmB,GAAGC,KAAD,IAAS;AAAA,sBACPN,UAAU,CAACG,WAAD,EAAa,MAAI;AAE7C,UAAMI,SAAS,GAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjB;AACA,WAAOF,SAAS,GAAGA,SAAH,GAAc,EAA9B;AAEN,GALkC,CADH;AAAA;AAAA,QACzBG,KADyB;AAAA,QAClBC,QADkB;;AAShCV,EAAAA,SAAS,CAAC,MAAI,CAAE,CAAP,CAAT;AACA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAD;AAASC,MAAAA;AAAT,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACML,KAAK,CAACM,QADZ,CADJ;AAKH,CAfD;;AAiBA,eAAeP,mBAAf","sourcesContent":["import React, {useReducer,useEffect, createContext} from 'react';\r\nimport bookReducer from '../bookReducer/bookReducer';\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider= (props)=>{\r\n    const [books, dispatch]= useReducer(bookReducer,()=>{\r\n      \r\n           const localData= localStorage.getItem(\"books\")\r\n           return localData ? localData :[]\r\n       \r\n    }\r\n    \r\n    );\r\n    useEffect(()=>{})\r\n    return  (\r\n        <BookContext.Provider value={{books , dispatch}}>\r\n            { props.children }\r\n        </BookContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BookContextProvider;"]},"metadata":{},"sourceType":"module"}