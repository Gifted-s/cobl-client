{"ast":null,"code":"var _jsxFileName = \"F:\\\\COBOL\\\\client\\\\src\\\\Components\\\\New.js\";\n// import React, {Suspense, Profiler} from 'react';\n// import {Spinner} from 'reactstrap'\n// const OtherComponent = React.lazy(() => import('./Dashboard'));\n// const AnotherComponent = React.lazy(() => import('./Nav'));\n// function MyComponent(props) {\n//   return (\n//     <div>\n//       <Suspense fallback={<div ><Spinner/></div>}>\n//         <section>\n//         <Profiler id=\"OtherComponent\" onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime)=>{\n//            console.log({id,phase, actualDuration, baseDuration,startTime, commitTime})\n//         }}>\n//           <OtherComponent/>\n//         </Profiler>\n//         <Profiler onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime,interactions)=>{\n//            console.log({id,phase, actualDuration, baseDuration,startTime, commitTime, interactions})\n//         }} id=\"AnotherComponent\" >\n//         <AnotherComponent />\n//         </Profiler>\n//           {/* <OtherComponent />\n//           <AnotherComponent /> */}\n//         </section>\n//       </Suspense>\n//     </div>\n//   );\n// }\n// MyComponent.say = function() {\n// console.log(\"Found me\")\n// }\n// function WrapComponent(component){\n//    class ImputedComponent extends React.Component {\n//        constructor(props){\n//         super(props);\n//         this.state={\n//              name:\"Sunkanmi\",\n//              Comp:null,\n//         }\n//        }\n//        static defaultProps={\n//            name:\"Sunkanmi\"\n//        }\n//        componentWillMount(){\n//            this.setState({Comp:component});\n//        }\n//        render(){\n//          if(this.state.Comp){\n//             return (\n//             <this.state.Comp  {...this.props} age={50}/>\n//             )\n//          }\n//          else{\n//            return <h1>Compnent is loading</h1>\n//          }\n//        }\n//    }\n//   ImputedComponent.say = component.say\n//    return ImputedComponent\n// }\n// console.log(typeof WrapComponent.say)\n// class CustomTextInput extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     // create a ref to store the textInput DOM element\n//     this.textInput = React.createRef();\n//     this.focusTextInput = this.focusTextInput.bind(this);\n//   }\n//   focusTextInput() {\n//     // Explicitly focus the text input using the raw DOM API\n//     // Note: we're accessing \"current\" to get the DOM node\n//     this.textInput.current.focus();\n//   }\n//   render() {\n//     // tell React that we want to associate the <input> ref\n//     // with the `textInput` that we created in the constructor\n//     return (\n//       <div>\n//         <input\n//           type=\"text\"\n//           ref={this.textInput} />\n//         <input\n//           type=\"button\"\n//           value=\"Focus the text input\"\n//           onClick={this.focusTextInput}\n//         />\n//       </div>\n//     );\n//   }\n// }\n// export default WrapComponent(MyComponent)\nimport React from 'react';\n\nconst New = () => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  });\n};\n\nexport default New;","map":{"version":3,"sources":["F:\\COBOL\\client\\src\\Components\\New.js"],"names":["React","New"],"mappings":";AAAA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CAND;;AAQA,eAAeA,GAAf","sourcesContent":["// import React, {Suspense, Profiler} from 'react';\r\n\r\n// import {Spinner} from 'reactstrap'\r\n// const OtherComponent = React.lazy(() => import('./Dashboard'));\r\n// const AnotherComponent = React.lazy(() => import('./Nav'));\r\n\r\n// function MyComponent(props) {\r\n    \r\n//   return (\r\n//     <div>\r\n\r\n        \r\n//       <Suspense fallback={<div ><Spinner/></div>}>\r\n//         <section>\r\n//         <Profiler id=\"OtherComponent\" onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime)=>{\r\n//            console.log({id,phase, actualDuration, baseDuration,startTime, commitTime})\r\n//         }}>\r\n//           <OtherComponent/>\r\n//         </Profiler>\r\n//         <Profiler onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime,interactions)=>{\r\n//            console.log({id,phase, actualDuration, baseDuration,startTime, commitTime, interactions})\r\n//         }} id=\"AnotherComponent\" >\r\n//         <AnotherComponent />\r\n//         </Profiler>\r\n//           {/* <OtherComponent />\r\n//           <AnotherComponent /> */}\r\n          \r\n          \r\n//         </section>\r\n//       </Suspense>\r\n//     </div>\r\n//   );\r\n// }\r\n// MyComponent.say = function() {\r\n// console.log(\"Found me\")\r\n// }\r\n\r\n// function WrapComponent(component){\r\n//    class ImputedComponent extends React.Component {\r\n//        constructor(props){\r\n//         super(props);\r\n//         this.state={\r\n//              name:\"Sunkanmi\",\r\n//              Comp:null,\r\n            \r\n//         }\r\n//        }\r\n//        static defaultProps={\r\n//            name:\"Sunkanmi\"\r\n//        }\r\n       \r\n//        componentWillMount(){\r\n//            this.setState({Comp:component});\r\n//        }\r\n//        render(){\r\n//          if(this.state.Comp){\r\n//             return (\r\n//             <this.state.Comp  {...this.props} age={50}/>\r\n//             )\r\n//          }\r\n//          else{\r\n//            return <h1>Compnent is loading</h1>\r\n//          }\r\n\r\n//        }\r\n       \r\n    \r\n      \r\n       \r\n//    }\r\n//   ImputedComponent.say = component.say\r\n//    return ImputedComponent\r\n// }\r\n// console.log(typeof WrapComponent.say)\r\n// class CustomTextInput extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     // create a ref to store the textInput DOM element\r\n//     this.textInput = React.createRef();\r\n//     this.focusTextInput = this.focusTextInput.bind(this);\r\n//   }\r\n\r\n//   focusTextInput() {\r\n//     // Explicitly focus the text input using the raw DOM API\r\n//     // Note: we're accessing \"current\" to get the DOM node\r\n//     this.textInput.current.focus();\r\n//   }\r\n\r\n//   render() {\r\n//     // tell React that we want to associate the <input> ref\r\n//     // with the `textInput` that we created in the constructor\r\n//     return (\r\n//       <div>\r\n//         <input\r\n//           type=\"text\"\r\n//           ref={this.textInput} />\r\n//         <input\r\n//           type=\"button\"\r\n//           value=\"Focus the text input\"\r\n//           onClick={this.focusTextInput}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default WrapComponent(MyComponent)\r\n\r\nimport React from 'react'\r\n\r\nconst New = () => {\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default New\r\n"]},"metadata":{},"sourceType":"module"}