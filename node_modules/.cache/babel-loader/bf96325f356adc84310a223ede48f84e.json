{"ast":null,"code":"var _jsxFileName = \"F:\\\\COBOL\\\\client\\\\src\\\\Components\\\\New.js\";\nimport React, { Suspense, Profiler } from 'react';\nimport { Spinner } from 'reactstrap';\nconst OtherComponent = React.lazy(() => import('./Dashboard'));\nconst AnotherComponent = React.lazy(() => import('./Nav'));\n\nfunction MyComponent(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_ col-md-5 col-sm-12 offset-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Phone number\"), React.createElement(\"input\", {\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Phone number\"), React.createElement(\"input\", {\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Phone number\"), React.createElement(\"input\", {\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Phone number\"), React.createElement(\"input\", {\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onClick: () => {\n      setStep(3);\n    },\n    type: \"button\",\n    value: \"Next\",\n    className: \"form-control signup btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))))))));\n}\n\nMyComponent.say = function () {\n  console.log(\"Found me\");\n};\n\nfunction WrapComponent(component) {\n  class ImputedComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        name: \"Sunkanmi\",\n        Comp: null\n      };\n    }\n\n    componentWillMount() {\n      this.setState({\n        Comp: component\n      });\n    }\n\n    render() {\n      if (this.state.Comp) {\n        return React.createElement(this.state.Comp, Object.assign({}, this.props, {\n          age: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, \"Compnent is loading\");\n      }\n    }\n\n  }\n\n  ImputedComponent.defaultProps = {\n    name: \"Sunkanmi\"\n  };\n  ImputedComponent.say = component.say;\n  return ImputedComponent;\n}\n\nconsole.log(typeof WrapComponent.say);\n\nclass CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props); // create a ref to store the textInput DOM element\n\n    this.textInput = React.createRef();\n    this.focusTextInput = this.focusTextInput.bind(this);\n  }\n\n  focusTextInput() {\n    // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n    this.textInput.current.focus();\n  }\n\n  render() {\n    // tell React that we want to associate the <input> ref\n    // with the `textInput` that we created in the constructor\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.textInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Focus the text input\",\n      onClick: this.focusTextInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WrapComponent(MyComponent);","map":{"version":3,"sources":["F:\\COBOL\\client\\src\\Components\\New.js"],"names":["React","Suspense","Profiler","Spinner","OtherComponent","lazy","AnotherComponent","MyComponent","props","phone","e","setPhone","target","value","setStep","say","console","log","WrapComponent","component","ImputedComponent","Component","constructor","state","name","Comp","componentWillMount","setState","render","defaultProps","CustomTextInput","textInput","createRef","focusTextInput","bind","current","focus"],"mappings":"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","sourcesContent":["import React, {Suspense, Profiler} from 'react';\r\n\r\nimport {Spinner} from 'reactstrap'\r\nconst OtherComponent = React.lazy(() => import('./Dashboard'));\r\nconst AnotherComponent = React.lazy(() => import('./Nav'));\r\n\r\nfunction MyComponent(props) {\r\n    \r\n  return (\r\n    <div>\r\n\r\n        \r\n      <Suspense fallback={<div ><Spinner/></div>}>\r\n        <section>\r\n        {/* <Profiler id=\"OtherComponent\" onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime)=>{\r\n           console.log({id,phase, actualDuration, baseDuration,startTime, commitTime})\r\n        }}>\r\n          <OtherComponent/>\r\n        </Profiler>\r\n        <Profiler onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime,interactions)=>{\r\n           console.log({id,phase, actualDuration, baseDuration,startTime, commitTime, interactions})\r\n        }} id=\"AnotherComponent\" >\r\n        <AnotherComponent />\r\n        </Profiler> */}\r\n\r\n<div className=\"form_ col-md-5 col-sm-12 offset-2\">\r\n                 <div className=\"form\">\r\n                     {/* <div className=\"alert alert-danger alert-dismissible\">\r\n                         Please enter all  fields\r\n                     </div> */}\r\n              <form   className=\"form\">\r\n              <div className=\"form-group\">\r\n                    <label>\r\n                        Phone number\r\n                    </label>\r\n                    <input value={phone}  onChange={(e)=>setPhone(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Phone number\r\n                    </label>\r\n                    <input value={phone}  onChange={(e)=>setPhone(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Phone number\r\n                    </label>\r\n                    <input value={phone}  onChange={(e)=>setPhone(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Phone number\r\n                    </label>\r\n                    <input value={phone}  onChange={(e)=>setPhone(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                \r\n               \r\n                \r\n               \r\n                <div className=\"form-group\">\r\n                    <input onClick={()=>{\r\n                        setStep(3)\r\n                    }}  type=\"button\" value=\"Next\" className=\"form-control signup btn btn-primary\"/>\r\n                </div>\r\n              </form>\r\n           </div>\r\n                     </div>  \r\n                 \r\n\r\n          {/* <OtherComponent />\r\n          <AnotherComponent /> */}\r\n          \r\n          \r\n        </section>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\nMyComponent.say = function() {\r\nconsole.log(\"Found me\")\r\n}\r\n\r\nfunction WrapComponent(component){\r\n   class ImputedComponent extends React.Component {\r\n       constructor(props){\r\n        super(props);\r\n        this.state={\r\n             name:\"Sunkanmi\",\r\n             Comp:null,\r\n            \r\n        }\r\n       }\r\n       static defaultProps={\r\n           name:\"Sunkanmi\"\r\n       }\r\n       \r\n       componentWillMount(){\r\n           this.setState({Comp:component});\r\n       }\r\n       render(){\r\n         if(this.state.Comp){\r\n            return (\r\n            <this.state.Comp  {...this.props} age={50}/>\r\n            )\r\n         }\r\n         else{\r\n           return <h1>Compnent is loading</h1>\r\n         }\r\n\r\n       }\r\n       \r\n    \r\n      \r\n       \r\n   }\r\n  ImputedComponent.say = component.say\r\n   return ImputedComponent\r\n}\r\nconsole.log(typeof WrapComponent.say)\r\nclass CustomTextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the textInput DOM element\r\n    this.textInput = React.createRef();\r\n    this.focusTextInput = this.focusTextInput.bind(this);\r\n  }\r\n\r\n  focusTextInput() {\r\n    // Explicitly focus the text input using the raw DOM API\r\n    // Note: we're accessing \"current\" to get the DOM node\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  render() {\r\n    // tell React that we want to associate the <input> ref\r\n    // with the `textInput` that we created in the constructor\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.textInput} />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Focus the text input\"\r\n          onClick={this.focusTextInput}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default WrapComponent(MyComponent)"]},"metadata":{},"sourceType":"module"}