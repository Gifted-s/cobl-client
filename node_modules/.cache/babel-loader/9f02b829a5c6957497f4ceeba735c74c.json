{"ast":null,"code":"var _jsxFileName = \"F:\\\\MY-APPS\\\\React\\\\client\\\\src\\\\components\\\\BookDetails.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBookDetailsQuery } from '../queries/queries';\n\nclass BookDetails extends Component {\n  displayBookDetails() {\n    const book = this.props.data.book;\n    console.log(this.props.data);\n\n    if (book) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, book.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, book.author.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"All books by this author\"), React.createElement(\"ul\", {\n        className: \"other-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, book.author.books.map(item => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, item.name);\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"No books selected.....\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"book-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.displayBookDetails());\n  }\n\n}\n\nexport default graphql(getBookDetailsQuery, {// options:(props)=>{\n  //     return{\n  //         variables:{\n  //             id:this.props.bookid\n  //         }\n  //     }\n  // }\n})(BookDetails);","map":{"version":3,"sources":["F:\\MY-APPS\\React\\client\\src\\components\\BookDetails.js"],"names":["React","Component","graphql","getBookDetailsQuery","BookDetails","displayBookDetails","book","props","data","console","log","name","author","books","map","item","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,mBAAR,QAAkC,oBAAlC;;AACA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAChCI,EAAAA,kBAAkB,GAAE;AAAA,UACTC,IADS,GACH,KAAKC,KAAL,CAAWC,IADR,CACTF,IADS;AAEhBG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWC,IAAvB;;AACA,QAAGF,IAAH,EAAQ;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,IAAI,CAACK,IAAV,CADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIL,IAAI,CAACM,MAAL,CAAYD,IAAhB,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,EAKI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQL,IAAI,CAACM,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAsBC,IAAI,IAAE;AACxB,eAAO;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAI,CAACJ,IAAxB,CAAP;AACH,OAFD,CAFR,CALJ,CADJ;AAeH,KAhBD,MAiBI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ;AAGH;AACJ;;AAEFM,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKZ,kBAAL,EADL,CADJ;AAMH;;AApCgC;;AAwCpC,eAAeH,OAAO,CAACC,mBAAD,EAAqB,CACvC;AACA;AACA;AACA;AACA;AACA;AACA;AAPuC,CAArB,CAAP,CAQZC,WARY,CAAf","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport {graphql} from 'react-apollo';\r\nimport {getBookDetailsQuery} from '../queries/queries';\r\nclass BookDetails extends Component {\r\n    displayBookDetails(){\r\n        const {book}=this.props.data;\r\n        console.log(this.props.data)\r\n        if(book){\r\n            return(\r\n                <div>\r\n                    <h2>{book.name}</h2>\r\n                    {/* <p>{book.genre}</p> */}\r\n                    <p>{book.author.name}</p>\r\n                    <p>All books by this author</p>\r\n                    <ul className=\"other-books\">\r\n                        {\r\n                            book.author.books.map(item=>{\r\n                                return <li key={item.id}>{item.name}</li>\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <div>No books selected.....</div>\r\n            )\r\n        }\r\n    }\r\n\r\n   render(){\r\n       \r\n       return (\r\n           <div id=\"book-details\">\r\n               {this.displayBookDetails()}\r\n           </div>\r\n           \r\n         )\r\n   }\r\n\r\n}\r\n\r\nexport default graphql(getBookDetailsQuery,{\r\n    // options:(props)=>{\r\n    //     return{\r\n    //         variables:{\r\n    //             id:this.props.bookid\r\n    //         }\r\n    //     }\r\n    // }\r\n})(BookDetails);\r\n"]},"metadata":{},"sourceType":"module"}