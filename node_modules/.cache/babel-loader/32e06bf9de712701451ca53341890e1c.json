{"ast":null,"code":"import _slicedToArray from \"F:\\\\COBOL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\COBOL\\\\client\\\\src\\\\Components\\\\DropdownContext.js\";\nimport React, { createContext, useState } from 'react';\nexport const DropdownContextProvider = createContext();\n\nconst DropdownContext = props => {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setOpen = _useState2[1];\n\n  const closeDropdown = () => {\n    console.log(\"found page\");\n    setOpen(false);\n  };\n\n  return React.createElement(DropdownContextProvider.Provider, {\n    value: {\n      closeDropdown,\n      isOpen\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default DropdownContext;","map":{"version":3,"sources":["F:\\COBOL\\client\\src\\Components\\DropdownContext.js"],"names":["React","createContext","useState","DropdownContextProvider","DropdownContext","props","isOpen","setOpen","closeDropdown","console","log","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA+BC,QAA/B,QAA8C,OAA9C;AACC,OAAO,MAAMC,uBAAuB,GAACF,aAAa,EAA3C;;AAER,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA,oBACNH,QAAQ,CAAC,IAAD,CADF;AAAA;AAAA,QACxBI,MADwB;AAAA,QAChBC,OADgB;;AAE/B,QAAMC,aAAa,GAAE,MAAI;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAHD;;AAIA,SACI,oBAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAD;AAAiBF,MAAAA;AAAjB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACM,QADX,CADJ;AAKH,CAXD;;AAaA,eAAeP,eAAf","sourcesContent":["import React ,{createContext , useState} from 'react'\r\n export const DropdownContextProvider=createContext()\r\n\r\nconst DropdownContext = (props) => {\r\n    const [isOpen, setOpen]= useState(true);\r\n    const closeDropdown= ()=>{\r\n        console.log(\"found page\")\r\n        setOpen(false)\r\n    }\r\n    return (\r\n        <DropdownContextProvider.Provider value={{closeDropdown , isOpen}}>\r\n            {props.children}\r\n        </DropdownContextProvider.Provider>\r\n    )\r\n}\r\n\r\nexport default DropdownContext\r\n"]},"metadata":{},"sourceType":"module"}