{"ast":null,"code":"import _taggedTemplateLiteral from \"F:\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"F:\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\src\\\\components\\\\BookDetails.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nquery($id:ID!){\\n   \\n    book(id:$id){\\n      id\\n      name\\n      genre\\n      author{\\n          name\\n          age\\n          books{\\n              name\\n              id\\n          }\\n      }\\n\\n    }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst BookDetailsQuery = gql(_templateObject());\n\nclass BookDetails extends Component {\n  displayDetails() {\n    const book = this.props.BookDetailsQuery.book;\n\n    if (book) {\n      return React.createElement(\"div\", {\n        className: \"bookdetails\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Name :\", book.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Genre: \", book.genre), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"B \", book.author.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Other books by author\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, book.author.books.map(item => {\n        return React.createElement(\"li\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, item.name);\n      })));\n    } else {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"No book selected............\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.displayDetails());\n  }\n\n}\n\nexport default graphql(BookDetailsQuery, {\n  name: \"BookDetailsQuery\",\n  options: props => {\n    return {\n      variables: {\n        id: props.bookid\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["F:\\grahQL\\MY-APPS\\React\\client\\src\\components\\BookDetails.js"],"names":["React","Component","gql","graphql","BookDetailsQuery","BookDetails","displayDetails","book","props","name","genre","author","books","map","item","id","render","options","variables","bookid"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,MAAMC,gBAAgB,GAAGF,GAAH,mBAAtB;;AAoBA,MAAMG,WAAN,SAA0BJ,SAA1B,CAAmC;AACjCK,EAAAA,cAAc,GAAE;AAEZ,UAAMC,IAAI,GAAE,KAAKC,KAAL,CAAWJ,gBAAX,CAA4BG,IAAxC;;AACA,QAAGA,IAAH,EAAQ;AACJ,aAEI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAWA,IAAI,CAACE,IAAhB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWF,IAAI,CAACG,KAAhB,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMH,IAAI,CAACI,MAAL,CAAYF,IAAlB,CAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCALA,EAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIF,IAAI,CAACI,MAAL,CAAYC,KAAZ,CAAkBC,GAAlB,CAAuBC,IAAD,IAAQ;AAC7B,eAAQ;AAAI,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAmBD,IAAI,CAACL,IAAxB,CAAR;AACD,OAFA,CADJ,CANA,CAFJ;AAeH,KAhBD,MAiBI;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ;AAGH;AACJ;;AACFO,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKV,cAAL,EAFJ,CADJ;AAMH;;AAnCiC;;AAsCnC,eAAeH,OAAO,CAACC,gBAAD,EAAmB;AACrCK,EAAAA,IAAI,EAAC,kBADgC;AAErCQ,EAAAA,OAAO,EAAET,KAAD,IAAS;AACb,WAAM;AACFU,MAAAA,SAAS,EAAC;AACNH,QAAAA,EAAE,EAACP,KAAK,CAACW;AADH;AADR,KAAN;AAKH;AARoC,CAAnB,CAAP,CASZd,WATY,CAAf","sourcesContent":["import React , {Component} from 'react';\r\n\r\nimport {gql} from 'apollo-boost';\r\nimport {graphql} from 'react-apollo';\r\n\r\n\r\nconst BookDetailsQuery = gql`\r\nquery($id:ID!){\r\n   \r\n    book(id:$id){\r\n      id\r\n      name\r\n      genre\r\n      author{\r\n          name\r\n          age\r\n          books{\r\n              name\r\n              id\r\n          }\r\n      }\r\n\r\n    }\r\n}\r\n`\r\n\r\nclass BookDetails extends Component{\r\n  displayDetails(){\r\n      \r\n      const book= this.props.BookDetailsQuery.book;\r\n      if(book){\r\n          return (\r\n              \r\n              <div className=\"bookdetails\">\r\n              \r\n              <h1>Name :{book.name}</h1>\r\n              <p>Genre: {book.genre}</p>\r\n              <p>B {book.author.name}</p>\r\n              <p>Other books by author</p>\r\n              <ul>\r\n                 {book.author.books.map((item)=>{\r\n                   return  <li key={item.id}>{item.name}</li>\r\n                 })}\r\n              </ul>\r\n              </div>\r\n          )\r\n      }\r\n      else{\r\n          return(\r\n              <h2>No book selected............</h2>\r\n          )\r\n      }\r\n  }\r\n render(){\r\n    \r\n     return(\r\n         <div>\r\n           \r\n            {this.displayDetails()}\r\n         </div>\r\n     )\r\n }\r\n}\r\n\r\nexport default graphql(BookDetailsQuery, {\r\n    name:\"BookDetailsQuery\",\r\n    options:(props)=>{\r\n        return{\r\n            variables:{\r\n                id:props.bookid\r\n            }\r\n        }\r\n    }\r\n})(BookDetails) "]},"metadata":{},"sourceType":"module"}