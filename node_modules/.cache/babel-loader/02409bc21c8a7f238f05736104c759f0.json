{"ast":null,"code":"import _taggedTemplateLiteral from \"F:\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"F:\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\src\\\\components\\\\BookDetails.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\nquery($id:ID!){\\n   \\n    book(id:$id){\\n      id\\n      name\\n      genre\\n      author{\\n          name\\n          age\\n          books{\\n              name\\n              id\\n          }\\n      }\\n\\n    }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst BookDetailsQuery = gql(_templateObject());\n\nclass BookDetails extends Component {\n  displayDetails() {\n    const book = this.props.BookDetailsQuery.book;\n\n    if (book) {\n      return;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Book Details\"));\n  }\n\n}\n\nexport default graphql(BookDetailsQuery, {\n  name: \"BookDetailsQuery\",\n  options: props => {\n    return {\n      variables: {\n        id: props.bookid\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["F:\\grahQL\\MY-APPS\\React\\client\\src\\components\\BookDetails.js"],"names":["React","Component","gql","graphql","BookDetailsQuery","BookDetails","displayDetails","book","props","render","name","options","variables","id","bookid"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AAGA,MAAMC,gBAAgB,GAAGF,GAAH,mBAAtB;;AAoBA,MAAMG,WAAN,SAA0BJ,SAA1B,CAAmC;AACjCK,EAAAA,cAAc,GAAE;AACZ,UAAMC,IAAI,GAAE,KAAKC,KAAL,CAAWJ,gBAAX,CAA4BG,IAAxC;;AACA,QAAGA,IAAH,EAAQ;AACJ;AACH;AACJ;;AACFE,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADJ;AAMH;;AAfiC;;AAkBnC,eAAeN,OAAO,CAACC,gBAAD,EAAmB;AACrCM,EAAAA,IAAI,EAAC,kBADgC;AAErCC,EAAAA,OAAO,EAAEH,KAAD,IAAS;AACb,WAAM;AACFI,MAAAA,SAAS,EAAC;AACNC,QAAAA,EAAE,EAACL,KAAK,CAACM;AADH;AADR,KAAN;AAKH;AARoC,CAAnB,CAAP,CASZT,WATY,CAAf","sourcesContent":["import React , {Component} from 'react';\r\n\r\nimport {gql} from 'apollo-boost';\r\nimport {graphql} from 'react-apollo';\r\n\r\n\r\nconst BookDetailsQuery = gql`\r\nquery($id:ID!){\r\n   \r\n    book(id:$id){\r\n      id\r\n      name\r\n      genre\r\n      author{\r\n          name\r\n          age\r\n          books{\r\n              name\r\n              id\r\n          }\r\n      }\r\n\r\n    }\r\n}\r\n`\r\n\r\nclass BookDetails extends Component{\r\n  displayDetails(){\r\n      const book= this.props.BookDetailsQuery.book;\r\n      if(book){\r\n          return \r\n      }\r\n  }\r\n render(){\r\n    \r\n     return(\r\n         <div>\r\n           <h2>Book Details</h2>\r\n\r\n         </div>\r\n     )\r\n }\r\n}\r\n\r\nexport default graphql(BookDetailsQuery, {\r\n    name:\"BookDetailsQuery\",\r\n    options:(props)=>{\r\n        return{\r\n            variables:{\r\n                id:props.bookid\r\n            }\r\n        }\r\n    }\r\n})(BookDetails) "]},"metadata":{},"sourceType":"module"}