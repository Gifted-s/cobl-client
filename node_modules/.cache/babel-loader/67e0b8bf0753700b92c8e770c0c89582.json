{"ast":null,"code":"var _jsxFileName = \"F:\\\\COBOL\\\\client\\\\src\\\\Components\\\\New.js\";\nimport React, { Suspense, Profiler } from 'react';\nimport { Spinner } from 'reactstrap';\nconst OtherComponent = React.lazy(() => import('./Dashboard'));\nconst AnotherComponent = React.lazy(() => import('./Nav'));\n\nfunction MyComponent(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Profiler, {\n    id: \"OtherComponent\",\n    onRender: (id, phase, actualDuration, baseDuration, startTime, commitTime) => {\n      console.log({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(OtherComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(Profiler, {\n    onRender: (id, phase, actualDuration, baseDuration, startTime, commitTime, interaction) => {\n      console.log({\n        id,\n        phase,\n        actualDuration,\n        baseDuration,\n        startTime,\n        commitTime\n      });\n    },\n    id: \"AnotherComponent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(AnotherComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })))));\n}\n\nMyComponent.say = function () {\n  console.log(\"Found me\");\n};\n\nfunction WrapComponent(component) {\n  class ImputedComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        name: \"Sunkanmi\",\n        Comp: null\n      };\n    }\n\n    componentWillMount() {\n      this.setState({\n        Comp: component\n      });\n    }\n\n    render() {\n      if (this.state.Comp) {\n        return React.createElement(this.state.Comp, Object.assign({}, this.props, {\n          age: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, \"Compnent is loading\");\n      }\n    }\n\n  }\n\n  ImputedComponent.defaultProps = {\n    name: \"Sunkanmi\"\n  };\n  ImputedComponent.say = component.say;\n  return ImputedComponent;\n}\n\nconsole.log(typeof WrapComponent.say);\nexport default WrapComponent(MyComponent);","map":{"version":3,"sources":["F:\\COBOL\\client\\src\\Components\\New.js"],"names":["React","Suspense","Profiler","Spinner","OtherComponent","lazy","AnotherComponent","MyComponent","props","id","phase","actualDuration","baseDuration","startTime","commitTime","console","log","interaction","say","WrapComponent","component","ImputedComponent","Component","constructor","state","name","Comp","componentWillMount","setState","render","defaultProps"],"mappings":"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","sourcesContent":["import React, {Suspense, Profiler} from 'react';\r\n\r\nimport {Spinner} from 'reactstrap'\r\nconst OtherComponent = React.lazy(() => import('./Dashboard'));\r\nconst AnotherComponent = React.lazy(() => import('./Nav'));\r\n\r\nfunction MyComponent(props) {\r\n    \r\n  return (\r\n    <div>\r\n\r\n        \r\n      <Suspense fallback={<div ><Spinner/></div>}>\r\n        <section>\r\n        <Profiler id=\"OtherComponent\" onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime)=>{\r\n           console.log({id,phase, actualDuration, baseDuration,startTime, commitTime})\r\n        }}>\r\n          <OtherComponent/>\r\n        </Profiler>\r\n        <Profiler onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime,interaction)=>{\r\n           console.log({id,phase, actualDuration, baseDuration,startTime, commitTime})\r\n        }} id=\"AnotherComponent\" >\r\n        <AnotherComponent />\r\n        </Profiler>\r\n          {/* <OtherComponent />\r\n          <AnotherComponent /> */}\r\n          \r\n          \r\n        </section>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\nMyComponent.say = function() {\r\nconsole.log(\"Found me\")\r\n}\r\n\r\nfunction WrapComponent(component){\r\n   class ImputedComponent extends React.Component {\r\n       constructor(props){\r\n        super(props);\r\n        this.state={\r\n             name:\"Sunkanmi\",\r\n             Comp:null,\r\n            \r\n        }\r\n       }\r\n       static defaultProps={\r\n           name:\"Sunkanmi\"\r\n       }\r\n       \r\n       componentWillMount(){\r\n           this.setState({Comp:component});\r\n       }\r\n       render(){\r\n         if(this.state.Comp){\r\n            return (\r\n            <this.state.Comp  {...this.props} age={50}/>\r\n            )\r\n         }\r\n         else{\r\n           return <h1>Compnent is loading</h1>\r\n         }\r\n\r\n       }\r\n       \r\n    \r\n      \r\n       \r\n   }\r\n  ImputedComponent.say = component.say\r\n   return ImputedComponent\r\n}\r\nconsole.log(typeof WrapComponent.say)\r\n\r\nexport default WrapComponent(MyComponent)"]},"metadata":{},"sourceType":"module"}