{"ast":null,"code":"import _taggedTemplateLiteral from \"F:\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"F:\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\src\\\\components\\\\addBook.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n      books{\\n          name\\n      }\\n  }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst authors = [{\n  \"name\": \"ADEWUMI SUNKANMI\",\n  \"id\": \"5d6d334831bc5010f8816348\"\n}, {\n  \"name\": \"Benne hinn\",\n  \"id\": \"5d6d33c331bc5010f881634a\"\n}, {\n  \"name\": \"Andrew Wommack\",\n  \"id\": \"5d6d344231bc5010f881634c\"\n}];\nconst addBookQuery = gql(_templateObject());\n\nclass BookList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      genre: \"\",\n      authorId: \"\"\n    };\n  }\n\n  displayAuthors() {\n    const data = this.props.data;\n\n    if (data.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Loading Authors......\");\n    } else {\n      return authors.map(author => {\n        return React.createElement(\"option\", {\n          key: author.name,\n          value: author.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, author.name);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      id: \"form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      onClick: e => {\n        this.setState({\n          name: e.target.value\n        });\n      },\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Select Author\"), React.createElement(\"select\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.displayAuthors())), React.createElement(\"div\", {\n      className: \"field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"+\"))));\n  }\n\n}\n\nexport default graphql(addBookQuery)(BookList);","map":{"version":3,"sources":["F:\\grahQL\\MY-APPS\\React\\client\\src\\components\\addBook.js"],"names":["React","Component","gql","graphql","authors","addBookQuery","BookList","constructor","props","state","name","genre","authorId","displayAuthors","data","loading","map","author","id","render","e","setState","target","value"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,SAAQC,GAAR,QAAkB,cAAlB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACC,MAAMC,OAAO,GAAE,CACZ;AACE,UAAQ,kBADV;AAEE,QAAM;AAFR,CADY,EAKZ;AACE,UAAQ,YADV;AAEE,QAAM;AAFR,CALY,EASZ;AACE,UAAQ,gBADV;AAEE,QAAM;AAFR,CATY,CAAf;AAeD,MAAMC,YAAY,GAAGH,GAAH,mBAAlB;;AAQA,MAAMI,QAAN,SAAuBL,SAAvB,CAAgC;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,EADE;AAEPC,MAAAA,KAAK,EAAC,EAFC;AAGPC,MAAAA,QAAQ,EAAC;AAHF,KAAX;AAKA;;AACHC,EAAAA,cAAc,GAAE;AACZ,UAAMC,IAAI,GAAE,KAAKN,KAAL,CAAWM,IAAvB;;AACA,QAAGA,IAAI,CAACC,OAAR,EAAgB;AACZ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ;AAGH,KAJD,MAKI;AACA,aAAOX,OAAO,CAACY,GAAR,CAAaC,MAAD,IAAU;AAC1B,eACI;AAAQ,UAAA,GAAG,EAAEA,MAAM,CAACP,IAApB;AAA0B,UAAA,KAAK,EAAEO,MAAM,CAACC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6CD,MAAM,CAACP,IAApD,CADJ;AAGF,OAJM,CAAP;AAKH;AACJ;;AACFS,EAAAA,MAAM,GAAE;AAEJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEC;AAAO,MAAA,OAAO,EAAGC,CAAD,IAAK;AAAC,aAAKC,QAAL,CAAc;AAACX,UAAAA,IAAI,EAACU,CAAC,CAACE,MAAF,CAASC;AAAf,SAAd;AAAqC,OAA3D;AAA6D,MAAA,IAAI,EAAC,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADH,EAKG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CALH,EASG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKV,cAAL,EADL,CAFD,CATH,EAeG;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,CAfH,CADJ,CADJ;AAuBH;;AAjD8B;;AAoDhC,eAAeV,OAAO,CAACE,YAAD,CAAP,CAAsBC,QAAtB,CAAf","sourcesContent":["import React , {Component} from 'react';\r\n\r\nimport {gql} from 'apollo-boost';\r\nimport {graphql} from 'react-apollo';\r\n const authors= [\r\n    {\r\n      \"name\": \"ADEWUMI SUNKANMI\",\r\n      \"id\": \"5d6d334831bc5010f8816348\"\r\n    },\r\n    {\r\n      \"name\": \"Benne hinn\",\r\n      \"id\": \"5d6d33c331bc5010f881634a\"\r\n    },\r\n    {\r\n      \"name\": \"Andrew Wommack\",\r\n      \"id\": \"5d6d344231bc5010f881634c\"\r\n    }\r\n  ]\r\n\r\nconst addBookQuery = gql`\r\n  {\r\n      books{\r\n          name\r\n      }\r\n  }\r\n\r\n`\r\nclass BookList extends Component{\r\n    constructor(props){\r\n     super(props);\r\n     this.state={\r\n         name:\"\",\r\n         genre:\"\",\r\n         authorId:\"\"\r\n     }\r\n    }\r\n  displayAuthors(){\r\n      const data= this.props.data;\r\n      if(data.loading){\r\n          return(\r\n              <div>Loading Authors......</div>\r\n          )\r\n      }\r\n      else{\r\n          return authors.map((author)=>{\r\n             return (\r\n                 <option key={author.name} value={author.id}>{author.name}</option>\r\n             )\r\n          })\r\n      }\r\n  }\r\n render(){\r\n     \r\n     return(\r\n         <div>\r\n             <form id=\"form-data\">\r\n                <div className=\"field\">\r\n                    <label>Name</label>\r\n                 <input onClick={(e)=>{this.setState({name:e.target.value})}} type=\"text\"/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Genre</label>\r\n                 <input type=\"text\"/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <label>Select Author</label>\r\n                 <select>\r\n                     {this.displayAuthors()}\r\n                 </select>\r\n                </div>\r\n                <div className=\"field\">\r\n                 <button>+</button>\r\n                </div>\r\n             </form>\r\n         </div>\r\n     )\r\n }\r\n}\r\n\r\nexport default graphql(addBookQuery)(BookList) "]},"metadata":{},"sourceType":"module"}