{"ast":null,"code":"import _defineProperty from \"F:\\\\context\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\context\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\src\\\\contexts\\\\ThemeContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createContext } from 'react';\nexport const ThemeContext = createContext();\nexport default class ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLightTheme: true,\n      light: {\n        syntax: '#555',\n        ui: '#ddd',\n        bg: '#eee'\n      },\n      dark: {\n        syntax: '#ddd',\n        ui: '#333',\n        bg: '#555'\n      }\n    };\n\n    this.togglebutton = () => {\n      this.setState({\n        isLightTheme: !this.state.isLightTheme\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(ThemeContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        togglebutton: this.togglebutton\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["F:\\context\\grahQL\\MY-APPS\\React\\client\\src\\contexts\\ThemeContext.js"],"names":["React","Component","createContext","ThemeContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","togglebutton","setState","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,aAA1B,QAA+C,OAA/C;AACA,OAAO,MAAMC,YAAY,GAAED,aAAa,EAAjC;AAEP,eAAe,MAAME,oBAAN,SAAmCH,SAAnC,CAA4C;AAAA;AAAA;AAAA,SAC3DI,KAD2D,GACrD;AACFC,MAAAA,YAAY,EAAC,IADX;AAEFC,MAAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,EAAE,EAAC,MAAnB;AAA2BC,QAAAA,EAAE,EAAC;AAA9B,OAFL;AAGFC,MAAAA,IAAI,EAAC;AAACH,QAAAA,MAAM,EAAC,MAAR;AAAgBC,QAAAA,EAAE,EAAC,MAAnB;AAA2BC,QAAAA,EAAE,EAAC;AAA9B;AAHH,KADqD;;AAAA,SAQ3DE,YAR2D,GAQ9C,MAAI;AACb,WAAKC,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAC,CAAC,KAAKD,KAAL,CAAWC;AAA1B,OAAd;AACH,KAV0D;AAAA;;AAW3DQ,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,oBAAM,KAAKT,KAAX;AAAkBO,QAAAA,YAAY,EAAE,KAAKA;AAArC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAKH;;AAjB0D","sourcesContent":["import React, {Component, createContext}  from 'react';\r\nexport const ThemeContext= createContext();\r\n\r\nexport default class ThemeContextProvider extends Component{\r\nstate={\r\n    isLightTheme:true,\r\n    light: {syntax:'#555', ui:'#ddd', bg:'#eee'},\r\n    dark:{syntax:'#ddd', ui:'#333', bg:'#555'}\r\n\r\n}\r\n\r\ntogglebutton=()=>{\r\n    this.setState({isLightTheme:!this.state.isLightTheme})\r\n}\r\nrender(){\r\n    return(\r\n        <ThemeContext.Provider value={{...this.state, togglebutton: this.togglebutton}}>\r\n        {/* {this.props.children} */}\r\n        </ThemeContext.Provider>\r\n    )\r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}