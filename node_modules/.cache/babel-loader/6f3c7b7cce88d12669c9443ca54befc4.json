{"ast":null,"code":"import _defineProperty from \"F:\\\\context\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"F:\\\\context\\\\grahQL\\\\MY-APPS\\\\React\\\\client\\\\src\\\\contexts\\\\ThemeContext.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, createContext } from 'react';\nconst ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLightTheme: true,\n      dark: {\n        bg: 'rgba(0,0,0,0.7)',\n        syntax: 'white'\n      },\n      light: {\n        bg: 'black',\n        syntax: 'white'\n      }\n    };\n\n    this.changeTheme = () => {\n      this.state(isLightTheme);\n    };\n  }\n\n  render() {\n    return React.createElement(ThemeContext.Provider, {\n      value: _objectSpread({}, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport { ThemeContext };\nexport default ThemeContextProvider;","map":{"version":3,"sources":["F:\\context\\grahQL\\MY-APPS\\React\\client\\src\\contexts\\ThemeContext.js"],"names":["React","Component","createContext","ThemeContext","ThemeContextProvider","state","isLightTheme","dark","bg","syntax","light","changeTheme","render","props","children"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,aAA5B,QAAgD,OAAhD;AAEA,MAAMC,YAAY,GAAED,aAAa,EAAjC;;AACA,MAAME,oBAAN,SAAmCH,SAAnC,CAA4C;AAAA;AAAA;AAAA,SACxCI,KADwC,GACjC;AACNC,MAAAA,YAAY,EAAC,IADP;AAENC,MAAAA,IAAI,EAAE;AAACC,QAAAA,EAAE,EAAC,iBAAJ;AAAwBC,QAAAA,MAAM,EAAC;AAA/B,OAFA;AAGNC,MAAAA,KAAK,EAAC;AAACF,QAAAA,EAAE,EAAC,OAAJ;AAAcC,QAAAA,MAAM,EAAC;AAArB;AAHA,KADiC;;AAAA,SAMxCE,WANwC,GAM3B,MAAI;AACb,WAAKN,KAAL,CAAWC,YAAX;AACH,KARuC;AAAA;;AAS5CM,EAAAA,MAAM,GAAE;AACJ,WACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,oBAAM,KAAKP,KAAX,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKQ,KAAL,CAAWC,QADpB,CADJ;AAMH;;AAhB2C;;AAkB5C,SAAQX,YAAR;AACA,eAAeC,oBAAf","sourcesContent":["import React , {Component , createContext} from 'react';\r\n\r\nconst ThemeContext= createContext();\r\nclass ThemeContextProvider extends Component{\r\n    state= {\r\n     isLightTheme:true,\r\n     dark :{bg:'rgba(0,0,0,0.7)' , syntax:'white'},\r\n     light:{bg:'black' , syntax:'white'},\r\n    }\r\n    changeTheme= ()=>{\r\n        this.state(isLightTheme)\r\n    }\r\nrender(){\r\n    return(\r\n        <ThemeContext.Provider value={{...this.state}}>\r\n                {this.props.children}\r\n        </ThemeContext.Provider>\r\n\r\n    )\r\n}\r\n}\r\nexport {ThemeContext}\r\nexport default ThemeContextProvider\r\n"]},"metadata":{},"sourceType":"module"}