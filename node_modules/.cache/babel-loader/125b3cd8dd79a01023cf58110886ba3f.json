{"ast":null,"code":"import _slicedToArray from \"F:\\\\COBOL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\COBOL\\\\client\\\\src\\\\Components\\\\New.js\";\nimport React, { Suspense, Profiler, useState } from 'react';\nimport { Spinner } from 'reactstrap';\nconst OtherComponent = React.lazy(() => import('./Dashboard'));\nconst AnotherComponent = React.lazy(() => import('./Nav'));\n\nfunction MyComponent(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        phoneNumber = _useState6[0],\n        setPhoneNumber = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        password = _useState8[0],\n        setPassword = _useState8[1];\n\n  const submit = e => {\n    e.preventDefault();\n    fetch('https://gotlodge.herokuapp.com', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        phoneNumber,\n        password\n      }).then(res => {\n        return res.json();\n      }).then(resJSON => {\n        console.group(resJSON);\n      })\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Suspense, {\n    fallback: React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form_ col-md-5 col-sm-12 offset-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submit,\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Phone number\"), React.createElement(\"input\", {\n    value: phoneNumber,\n    onChange: e => setPhoneNumber(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    type: \"telephone\",\n    placeholder: \"Enter your phone number\",\n    className: \"form-control\",\n    name: \"phone_number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary d-block\",\n    value: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }))))))));\n}\n\nMyComponent.say = function () {\n  console.log(\"Found me\");\n};\n\nfunction WrapComponent(component) {\n  class ImputedComponent extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        name: \"Sunkanmi\",\n        Comp: null\n      };\n    }\n\n    componentWillMount() {\n      this.setState({\n        Comp: component\n      });\n    }\n\n    render() {\n      if (this.state.Comp) {\n        return React.createElement(this.state.Comp, Object.assign({}, this.props, {\n          age: 50,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, \"Compnent is loading\");\n      }\n    }\n\n  }\n\n  ImputedComponent.defaultProps = {\n    name: \"Sunkanmi\"\n  };\n  ImputedComponent.say = component.say;\n  return ImputedComponent;\n}\n\nconsole.log(typeof WrapComponent.say);\n\nclass CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props); // create a ref to store the textInput DOM element\n\n    this.textInput = React.createRef();\n    this.focusTextInput = this.focusTextInput.bind(this);\n  }\n\n  focusTextInput() {\n    // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n    this.textInput.current.focus();\n  }\n\n  render() {\n    // tell React that we want to associate the <input> ref\n    // with the `textInput` that we created in the constructor\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.textInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      value: \"Focus the text input\",\n      onClick: this.focusTextInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default WrapComponent(MyComponent);","map":{"version":3,"sources":["F:\\COBOL\\client\\src\\Components\\New.js"],"names":["React","Suspense","Profiler","useState","Spinner","OtherComponent","lazy","AnotherComponent","MyComponent","props","name","setName","email","setEmail","phoneNumber","setPhoneNumber","password","setPassword","submit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","resJSON","console","group","target","value","say","log","WrapComponent","component","ImputedComponent","Component","constructor","state","Comp","componentWillMount","setState","render","defaultProps","CustomTextInput","textInput","createRef","focusTextInput","bind","current","focus"],"mappings":"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","sourcesContent":["import React, {Suspense, Profiler , useState} from 'react';\r\n\r\nimport {Spinner} from 'reactstrap'\r\nconst OtherComponent = React.lazy(() => import('./Dashboard'));\r\nconst AnotherComponent = React.lazy(() => import('./Nav'));\r\n\r\nfunction MyComponent(props) {\r\n    const [name, setName]= useState('')\r\n    const [email, setEmail]= useState('');\r\n    const [phoneNumber, setPhoneNumber]= useState(null);\r\n    const [password, setPassword]= useState('');\r\n    const submit= (e)=>{\r\n     e.preventDefault();\r\n     fetch('https://gotlodge.herokuapp.com', {\r\n      method:\"POST\",\r\n      headers:{\r\n        \"Content-Type\":\"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n        name,\r\n        password,\r\n        phoneNumber,\r\n        password\r\n      }).then((res)=>{\r\n        return res.json();\r\n      }).then((resJSON)=>{\r\n        console.group(resJSON)\r\n      })\r\n\r\n     })\r\n    }\r\n  return (\r\n    <div>\r\n\r\n        \r\n      <Suspense fallback={<div ><Spinner/></div>}>\r\n        <section>\r\n        {/* <Profiler id=\"OtherComponent\" onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime)=>{\r\n           console.log({id,phase, actualDuration, baseDuration,startTime, commitTime})\r\n        }}>\r\n          <OtherComponent/>\r\n        </Profiler>\r\n        <Profiler onRender={(id,phase, actualDuration, baseDuration,startTime, commitTime,interactions)=>{\r\n           console.log({id,phase, actualDuration, baseDuration,startTime, commitTime, interactions})\r\n        }} id=\"AnotherComponent\" >\r\n        <AnotherComponent />\r\n        </Profiler> */}\r\n\r\n                <div className=\"form_ col-md-5 col-sm-12 offset-2\">\r\n                 <div className=\"form\">\r\n                     {/* <div className=\"alert alert-danger alert-dismissible\">\r\n                         Please enter all  fields\r\n                     </div> */}\r\n              <form onSubmit={submit}   className=\"form\">\r\n              <div className=\"form-group\">\r\n                    <label>\r\n                        Name\r\n                    </label>\r\n                    <input value={name}  onChange={(e)=>setName(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                       Email\r\n                    </label>\r\n                    <input value={email}  onChange={(e)=>setEmail(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                        Phone number\r\n                    </label>\r\n                    <input value={phoneNumber}  onChange={(e)=>setPhoneNumber(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>\r\n                      Password\r\n                    </label>\r\n                    <input value={password}  onChange={(e)=>setPassword(e.target.value)} type=\"telephone\" placeholder=\"Enter your phone number\" className=\"form-control\" name=\"phone_number\"/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" className=\"btn btn-primary d-block\" value=\"submit\"/>\r\n                </div>\r\n\r\n                \r\n               \r\n                \r\n               \r\n              \r\n              </form>\r\n           </div>\r\n                     </div>  \r\n                 \r\n\r\n          {/* <OtherComponent />\r\n          <AnotherComponent /> */}\r\n          \r\n          \r\n        </section>\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\nMyComponent.say = function() {\r\nconsole.log(\"Found me\")\r\n}\r\n\r\nfunction WrapComponent(component){\r\n   class ImputedComponent extends React.Component {\r\n       constructor(props){\r\n        super(props);\r\n        this.state={\r\n             name:\"Sunkanmi\",\r\n             Comp:null,\r\n            \r\n        }\r\n       }\r\n       static defaultProps={\r\n           name:\"Sunkanmi\"\r\n       }\r\n       \r\n       componentWillMount(){\r\n           this.setState({Comp:component});\r\n       }\r\n       render(){\r\n         if(this.state.Comp){\r\n            return (\r\n            <this.state.Comp  {...this.props} age={50}/>\r\n            )\r\n         }\r\n         else{\r\n           return <h1>Compnent is loading</h1>\r\n         }\r\n\r\n       }\r\n       \r\n    \r\n      \r\n       \r\n   }\r\n  ImputedComponent.say = component.say\r\n   return ImputedComponent\r\n}\r\nconsole.log(typeof WrapComponent.say)\r\nclass CustomTextInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // create a ref to store the textInput DOM element\r\n    this.textInput = React.createRef();\r\n    this.focusTextInput = this.focusTextInput.bind(this);\r\n  }\r\n\r\n  focusTextInput() {\r\n    // Explicitly focus the text input using the raw DOM API\r\n    // Note: we're accessing \"current\" to get the DOM node\r\n    this.textInput.current.focus();\r\n  }\r\n\r\n  render() {\r\n    // tell React that we want to associate the <input> ref\r\n    // with the `textInput` that we created in the constructor\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.textInput} />\r\n        <input\r\n          type=\"button\"\r\n          value=\"Focus the text input\"\r\n          onClick={this.focusTextInput}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default WrapComponent(MyComponent)"]},"metadata":{},"sourceType":"module"}