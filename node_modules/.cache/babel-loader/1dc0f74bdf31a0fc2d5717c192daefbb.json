{"ast":null,"code":"import _slicedToArray from \"F:\\\\COBOL\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"F:\\\\COBOL\\\\client\\\\src\\\\Components\\\\DropdownContext.js\";\nimport React, { createContext, useState } from 'react';\nexport const DropdownContextProvider = createContext();\n\nconst DropdownContext = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setOpen = _useState2[1];\n\n  const _useState3 = _slicedToArray(useState, 2),\n        title = _useState3[0],\n        setTitle = _useState3[1];\n\n  const user = localStorage.getItem('user');\n  const userJSON = JSON.parse(user);\n  console.log(userJSON);\n\n  const closeDropdown = () => {\n    setOpen(!isOpen);\n  };\n\n  return React.createElement(DropdownContextProvider.Provider, {\n    value: {\n      closeDropdown,\n      isOpen\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default DropdownContext;","map":{"version":3,"sources":["F:\\COBOL\\client\\src\\Components\\DropdownContext.js"],"names":["React","createContext","useState","DropdownContextProvider","DropdownContext","props","isOpen","setOpen","title","setTitle","user","localStorage","getItem","userJSON","JSON","parse","console","log","closeDropdown","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,aAAf,EAA+BC,QAA/B,QAA8C,OAA9C;AACC,OAAO,MAAMC,uBAAuB,GAACF,aAAa,EAA3C;;AAER,MAAMG,eAAe,GAAIC,KAAD,IAAW;AAAA,oBACNH,QAAQ,CAAC,KAAD,CADF;AAAA;AAAA,QACxBI,MADwB;AAAA,QAChBC,OADgB;;AAAA,oCAELL,QAFK;AAAA,QAExBM,KAFwB;AAAA,QAEjBC,QAFiB;;AAG/B,QAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,QAAMC,QAAQ,GAAEC,IAAI,CAACC,KAAL,CAAWL,IAAX,CAAhB;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;;AAEC,QAAMK,aAAa,GAAE,MAAI;AAErBX,IAAAA,OAAO,CAAC,CAACD,MAAF,CAAP;AACH,GAHD;;AAIA,SACI,oBAAC,uBAAD,CAAyB,QAAzB;AAAkC,IAAA,KAAK,EAAE;AAACY,MAAAA,aAAD;AAAiBZ,MAAAA;AAAjB,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACc,QADX,CADJ;AAKH,CAhBD;;AAkBA,eAAef,eAAf","sourcesContent":["import React ,{createContext , useState} from 'react'\r\n export const DropdownContextProvider=createContext()\r\n\r\nconst DropdownContext = (props) => {\r\n    const [isOpen, setOpen]= useState(false);\r\n    const [title, setTitle] = useState\r\n    const user=  localStorage.getItem('user');\r\n    const userJSON= JSON.parse(user)\r\n   console.log(userJSON)\r\n    \r\n    const closeDropdown= ()=>{\r\n        \r\n        setOpen(!isOpen)\r\n    }\r\n    return (\r\n        <DropdownContextProvider.Provider value={{closeDropdown , isOpen}}>\r\n            {props.children}\r\n        </DropdownContextProvider.Provider>\r\n    )\r\n}\r\n\r\nexport default DropdownContext\r\n"]},"metadata":{},"sourceType":"module"}